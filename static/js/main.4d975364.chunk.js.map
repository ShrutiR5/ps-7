{"version":3,"sources":["Projects.js","Skills.js","Homepage.js","App.js","registerServiceWorker.js","index.js"],"names":["Projects","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","data","inherits","createClass","key","value","_this2","d3","then","d","console","log","setState","react_default","a","createElement","className","map","i","_React$createElement","reactstrap_es","body","defineProperty","name","description","target","href","links","outline","color","Component","Skills","apply","arguments","Homepage","id","src","alt","App","HashRouter","Link","to","Route","exact","path","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4d975364.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport * as d3 from 'd3';\nimport { Card, Button, CardBody, CardTitle, CardText, Col } from 'reactstrap';\n\nexport class Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: []\n        }\n    }\n\n    componentDidMount() {\n        // Load data\n        d3.csv(\"data/projects.csv\").then((d) => {\n            console.log(d);\n            this.setState({ data: d });\n        });\n    }\n    \n    render() {\n        console.log(this.state.data)\n        return <div className=\"container\"> <h1>Projects</h1>\n                 { this.state.data.map((d, i) => {\n                       return <Col key={ \"project\" + i }>\n                              <Card body className=\"text-center\" body outline color=\"primary\">\n                                <CardBody>\n                                  <CardTitle>\n                                    { d.name }\n                                  </CardTitle>\n                                  <CardText>\n                                    { d.description }\n                                  </CardText>\n                                  <a target=\"_blank\" href={ d.links }>\n                                    <Button outline color=\"primary\">Link</Button>\n                                  </a>\n                                </CardBody>\n                              </Card>\n                              <br/>\n                              </Col>\n                   \n                   }) }\n               </div>\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Card, Button, CardBody, CardTitle, CardText, Col } from 'reactstrap';\n\nexport class Skills extends Component {\n    render() {\n        return <div className=\"container\">\n        <p></p>\n        <h2>Technical Skills</h2>\n        <p> <em>Technical skills mostly consist of different programming languages I am know and practice.</em></p>\n        <Card body outline color=\"primary\">\n        <ul>\n            <li>React</li>\n            <li>JavaScript</li>\n            <li>HTML</li>\n            <li>CSS</li>\n            <li>Java</li>\n            <li>R</li>\n        </ul>\n        </Card>\n        <p></p>\n        <h2>Design Skills</h2>\n        <p> <em>Design skills mostly consist of different softwares I know how to use to create various types of wire-frames.</em> </p>\n       <Card body outline color=\"primary\">\n       <ul>\n            <li>Figma</li>\n            <li>Sketch</li>\n            <li>Figma</li>\n            <li>Photoshop</li>\n            <li>Illustrator</li>\n            <li>Adobe XD</li>\n        </ul>\n        </Card> \n        </div>\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\n\nexport class Homepage extends Component {\n    render() {\n        return <div id=\"about\"><h1>Shruti Rajagopalan</h1>\n            <img src=\"img/shruti.jpg\" alt=\"a picture of me\" />\n\n            <p>Hi there. My name is Shruti and I am currently a junior majoring in Informatics at the University of Washington (UW).\n                I am interested in User Experience and Interface Design. At UW\n                I am a Resident Advisor (RA) for the Global Experience living learning community.\n                I am Director of Finance for an Informatics organization called SUDO and an International student mentor.</p>\n           \n        </div>\n\n    }\n}","\nimport React, { Component } from 'react';\nimport './App.css';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport { Projects } from './Projects';\nimport { Skills } from './Skills';\nimport { Homepage } from './Homepage';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nclass App extends Component {\n    render() {\n        return (\n            <Router>\n              <div className=\"container\">\n                <Link to=\"/\">Home</Link>\n                { ' ' }\n                <Link to=\"/projects\">Projects</Link>\n                { ' ' }\n                <Link to=\"/skills\">Skills</Link>\n                <Route exact path=\"/\" component={ Homepage } />\n                <Route path=\"/projects\" component={ Projects } />\n                <Route path=\"/skills\" component={ Skills } />\n              </div>\n            </Router>\n            );\n    }\n}\n\nexport default App;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}